#!/bin/sh

set -u

usage () {
  echo "usage: $(basename "${0}") COMMAND ARGS"
  echo "COMMANDS:"
  echo "  serve"
  echo "  listen"
  echo "  emit SOURCE TYPE PAYLOAD"
  echo "EXAMPLES:"
  echo "  ev serve"
  echo "  ev emit xkblayout-state lang_change _"
  printf "  ev listen | grep -E '^xkblayout-state\tlang_change' | while read -r _; do echo 'lang is changed'; done\n"
  echo "  ev listen xkblayout-state lang_change *"
}

if [ "${#}" -lt 1 ]; then
  usage
  exit 1
fi

: "${EV_RUNTIME_DIR:="/tmp/ev"}"
EV_IN_FIFO="${EV_RUNTIME_DIR}/in.fifo"
EV_OUT_SOCK="${EV_RUNTIME_DIR}/out.sock"

info () {
  printf 2>'/dev/null' 'ev: ERROR: %s\n' "${1}"
}

case "${1}" in
  serve)
    # Ensure `in` fifo exist
    [ ! -p "${EV_RUNTIME_DIR}" ] && mkdir -p "${EV_RUNTIME_DIR}" && chmod 700 "${EV_RUNTIME_DIR}"
    [ ! -p "${EV_IN_FIFO}" ] && mkfifo "${EV_IN_FIFO}" && chmod 600 "${EV_IN_FIFO}"
    # If socket exists and responding, exit 
    ncat -zw1 "${EV_OUT_SOCK}" >/dev/null 2>&1 && info 'already serving (socket is in use and responding)' && exit 1
    # Remove old `out` socket
    rm -f "${EV_OUT_SOCK}"
    # Keep the `in` fifo open
    exec 8<>"${EV_IN_FIFO}"
    # Serve messages from it to `out` socket
    ncat --send-only -lkU "${EV_OUT_SOCK}" < "${EV_IN_FIFO}" 

    rm "${EV_OUT_SOCK}" "${EV_IN_FIFO}"
    ;;
  emit) 
    source="${2}"
    type="${3}"
    payload="${4}"
    printf '%s\t%s\t%s\n' "${source}" "${type}" "${payload}" > "${EV_IN_FIFO}"
    ;;
  listen)
    TIMEOUT=300
    current=0
    while true; do
      # guard for socket not existing
      socat -u "UNIX-CONNECT:${EV_OUT_SOCK}" '-' 2>'/dev/null'
      sleep 0.01
      [ -S "${EV_OUT_SOCK}" ] || current="$((current + 1))"
      [ "${current}" -eq "${TIMEOUT}" ] && info 'connection timeout' && exit 1
    done
    ;;
  *)
    usage
    ;;
esac
